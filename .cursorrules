# Cursor AI Assistant - 全社展開用clasp環境運用ルール

## 対象ユーザー・開発環境
- **日本語話者**のプログラミング初心者〜中級者
- **Python・Google Apps Script**での作業効率化
- **clasp環境による一時的な開発・テスト環境**
- **UV + pyproject.toml**によるモダン開発環境

## 基本動作ルール

### 言語使用
- **回答言語**: 日本語
- **コード**: 英語
- **コメント**: 日本語

### 新運用方針（重要）
- **clasp環境は一時的な作業場**: 開発・動作確認のみ
- **本番は個人プロジェクト**: 動作確認後に個人GASプロジェクトに移行
- **コードは残さない**: 作業完了後は必ずクリーンアップ
- **命名規則不要**: 一時的な使用のため特別な命名規則なし

### Git管理ルール（必須遵守）
- **プッシュ前の必須チェック**: `git status`で全変更ファイルを確認
- **全ディレクトリ対象**: `git add .`でプロジェクト全体を追加
- **コミット前確認**: `git diff --cached --name-only`でコミット対象ファイルを確認
- **プッシュ前最終確認**: `git log --oneline -1`で最新コミット内容を確認
- **漏れ防止**: 手動コピペ後は必ず`git add . && git commit && git push`を実行
- **scripts/ディレクトリ**: 特に`scripts/`ディレクトリの変更を見逃さない
- **同期確認**: `Code.js`と`task_notifier.js`の同期を必ず確認

### 自動コミット・プッシュルール（新規追加）
- **自動コミット**: コードやスクリプトが論理的に意味のある単位で変更があった場合、毎回自動コミット
- **自動プッシュ**: チームやCIが動く単位でまとまった場合は自動プッシュ
- **コミットタイミング**: 機能追加、バグ修正、リファクタリング、設定変更完了時
- **プッシュタイミング**: 複数のコミットが蓄積された場合、重要な機能が完成した場合
- **指示不要**: ユーザーからの指示がなくても自動的にGit管理を実行

### ファイル同期ルール
- **Code.js更新時**: `task_notifier.js`も必ず同期
- **手動コピペ後**: 即座にGit管理に反映
- **プッシュ漏れ防止**: 変更ファイルの完全な確認を必須とする

## 技術スタック

### 推奨環境
- **Python**: 3.11+ (UV管理)
- **Node.js**: 20+ (clasp用)
- **Google Apps Script**: clasp CLI
- **エディタ**: Cursor AI

### 開発フロー
1. **clasp環境で開発・テスト**
2. **動作確認完了**
3. **個人GASプロジェクトに移行**
4. **clasp環境をクリーンアップ**

## コード品質

### 必須事項
- **エラーハンドリング**: try-catch必須
- **ログ出力**: console.logで処理状況を明示
- **設定値**: Script Properties使用
- **日本語コメント**: 処理内容を日本語で説明

### 禁止事項
- **ハードコーディング**: APIキー等の機密情報
- **グローバル変数**: 必要最小限に抑制
- **長い関数**: 100行以内に分割

## セキュリティ

### 機密情報管理
- **Script Properties**: 全てのAPIキー・トークン
- **環境変数**: 開発環境でのみ使用
- **Git除外**: .envファイル等は必ず.gitignore

### アクセス制御
- **最小権限**: 必要最小限のAPI権限
- **トークン管理**: 定期的なローテーション
- **監査ログ**: 重要な操作はログ記録

## トラブルシューティング

### よくある問題
1. **clasp login失敗**: ブラウザ認証を再実行
2. **API制限**: レート制限に注意
3. **権限エラー**: Script Properties設定確認
4. **プッシュ漏れ**: Git管理ルールを厳守

### 緊急時対応
- **ロールバック**: 前のコミットに戻す
- **設定確認**: Script Properties再設定
- **ログ確認**: 実行ログでエラー特定

## 運用チェックリスト

### 開発完了時
- [ ] 動作確認完了
- [ ] エラーハンドリング実装
- [ ] ログ出力確認
- [ ] Script Properties設定
- [ ] Git管理ルール遵守
- [ ] プッシュ漏れ確認

### 移行時
- [ ] 個人プロジェクト作成
- [ ] コード移行完了
- [ ] 動作確認完了
- [ ] clasp環境クリーンアップ
- [ ] ドキュメント更新